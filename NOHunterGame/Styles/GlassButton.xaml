<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mp="clr-namespace:Microsoft.MultiPoint.MultiPointControls;assembly=Microsoft.MultiPoint.MultiPointControls">
    
    <Style x:Key="GlassButton" TargetType="{x:Type mp:MultiPointButton}">
    	<Style.Resources>
    		<Storyboard x:Key="OnNumberEnter">
    			<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(FrameworkElement.Width)">
    				<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="50"/>
    			</DoubleAnimationUsingKeyFrames>
    			<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(FrameworkElement.Height)">
    				<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="50"/>
    			</DoubleAnimationUsingKeyFrames>
    		</Storyboard>
            <Storyboard x:Key="OnNumberLeave">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(FrameworkElement.Width)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="40"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(FrameworkElement.Height)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="40"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnFinishedNumberEnter">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(FrameworkElement.Width)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="50"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(FrameworkElement.Height)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="50"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnFinishedNumberLeave">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(FrameworkElement.Width)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="5"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(FrameworkElement.Height)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="5"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnRightChoice">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(FrameworkElement.Width)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="5"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(FrameworkElement.Height)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="5"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnWrongChoice">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
            		<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                	<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="144"/>
                	<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="360"/>
            	</DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnAppear">
            	<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(UIElement.Opacity)">
            		<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            		<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
            	</DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </Style.Resources>
        
        <Style.Setters>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontFamily" Value="Algerian"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="BitmapEffect">
                <Setter.Value>
                    <DropShadowBitmapEffect/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
            	<Setter.Value>
            		<ControlTemplate TargetType="{x:Type mp:MultiPointButton}">
            			<ControlTemplate.Resources>
            				<Storyboard x:Key="OnClick" AutoReverse="True">
            					<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RefractionLayer" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
            						<SplineColorKeyFrame KeyTime="00:00:00" Value="#FFFFFFFF"/>
            						<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FFEA2828"/>
            						<SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FFEA2828"/>
            					</ColorAnimationUsingKeyFrames>
            				</Storyboard>
            			</ControlTemplate.Resources>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="mp:MultiPointButton.MultiPointButtonClick">
                                <BeginStoryboard Storyboard="{StaticResource OnClick}" x:Name="OnClick_BeginStoryboard"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                        <Grid>
            				<!-- Background Layer -->
            				<Ellipse Fill="{TemplateBinding Background}"/>
            				<!-- Refraction Layer -->
            				<Ellipse x:Name="RefractionLayer">
            					<Ellipse.Fill>
            						<RadialGradientBrush GradientOrigin="0.496,1.052">
            							<RadialGradientBrush.RelativeTransform>
            								<TransformGroup>
            									<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
            									<TranslateTransform X="0.02" Y="0.3"/>
            								</TransformGroup>
            							</RadialGradientBrush.RelativeTransform>
            							<GradientStop Offset="1" Color="#00000000"/>
            							<GradientStop Offset="0.4" Color="#FFFFFFFF"/>
            						</RadialGradientBrush>
            					</Ellipse.Fill>
            					<Ellipse.Margin>
            						<Thickness Left="0" Top="0" Right="0" Bottom="0"/>
            					</Ellipse.Margin>
            				</Ellipse>
            				<!-- Reflection Layer -->
            				<Path x:Name="ReflectionLayer" VerticalAlignment="Top" Stretch="Fill">
            					<Path.RenderTransform>
            						<ScaleTransform ScaleY="0.5" />
            					</Path.RenderTransform>
            					<Path.Data>
            						<PathGeometry>
            							<PathFigure IsClosed="True" StartPoint="98.999,45.499">
            								<BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" Point3="85.502,51.029"/>
            								<BezierSegment IsSmoothJoin="True" Point1="75.860,47.685" Point2="69.111,45.196" Point3="50.167,45.196"/>
            								<BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" Point3="10.665,51.363"/>
            								<BezierSegment IsSmoothJoin="True" Point1="7.469,52.580" Point2="1.000,53.252" Point3="1.000,44.999"/>
            								<BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" Point3="2.519,34.286"/>
            								<BezierSegment IsSmoothJoin="True" Point1="9.106,14.370" Point2="27.875,0" Point3="50,0"/>
            								<BezierSegment Point1="72.198,0" Point2="91.018,14.466" Point3="97.546,34.485"/>
            								<BezierSegment IsSmoothJoin="True" Point1="99.139,39.369" Point2="98.999,40.084" Point3="98.999,45.499"/>
            							</PathFigure>
            						</PathGeometry>
            					</Path.Data>
            					<Path.Fill>
            						<RadialGradientBrush GradientOrigin="0.498,0.526">
            							<RadialGradientBrush.RelativeTransform>
            								<TransformGroup>
            									<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="1.997"/>
            									<TranslateTransform X="0" Y="0.5"/>
            								</TransformGroup>
            							</RadialGradientBrush.RelativeTransform>
            							<GradientStop Offset="1" Color="#FFFFFFFF"/>
            							<GradientStop Offset="0.85" Color="#92FFFFFF"/>
            							<GradientStop Offset="0" Color="#00000000"/>
            						</RadialGradientBrush>
            					</Path.Fill>
            				</Path>
            				<!-- ContentPresenter -->
            				<ContentPresenter Margin="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            			</Grid>
            		</ControlTemplate>
            	</Setter.Value>
            </Setter>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="RenderTransformOrigin" Value="0,0"/>
            <Setter Property="RenderTransform">
            	<Setter.Value>
            		<TransformGroup>
            			<ScaleTransform ScaleX="1" ScaleY="1"/>
            			<SkewTransform AngleX="0" AngleY="0"/>
            			<RotateTransform/>
            			<TranslateTransform X="0" Y="0"/>
            		</TransformGroup>
            	</Setter.Value>
            </Setter>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style.Setters>
    </Style>

</ResourceDictionary>